# /*
# Create a Cloud9 environment as a launcher platform to create another stuffs
# Based on https://github.com/awslabs/aws-cloudformation-templates
# Adapted from original file: https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/Cloud9/C9.yaml
# */

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Cloud9 Environment with AWS CodeCommit Repository

Parameters:

  EC2InstanceType:
    Description: EC2 instance type on which IDE runs
    Type:        String
    Default:     t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

  AutoHibernateTimeout:
    Description:  How many minutes idle before shutting down the IDE. Options, 30min, 1hr, 4hr, 1day, 1week, Never (0)
    Type:         Number
    Default:      240
    AllowedValues:
      - 30
      - 60
      - 240
      - 1440
      - 10080
      - 0

  RM:
    Description:    Please specify your RM (only numbers), it will be used for tagging and resource names. Mandatory LOWER CASE.
    Type:           String
    Default:        "12345"

  User:
    Description:    Please specify the User.
    Type:           String

  Password:
    NoEcho: 'true'
    Type: String
    Description: New account password
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters

  RepositoryName:
    Description:    CodeCommit Repository Name
    Type:           String
    Default:        'scripting'

Resources:

  FiapUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  
  FiapLabGroup:
    Type: AWS::IAM::Group

  GroupAddition:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'FiapLabGroup'
      Users: [!Ref 'FiapUser']

  FiapLabSecurityGroupPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FiapLabSecurityGroupPolicies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: [
            "ec2:CreateSecurityGroup",
            "ec2:DescribeSecurityGroups", 
            "ec2:DescribeSecurityGroupRules",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:RevokeSecurityGroupIngress",
            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
            "ec2:ModifySecurityGroupRules",
            "ec2:DeleteSecurityGroup"
            ]
          Resource: '*'
      Groups: [!Ref 'FiapLabGroup']

  FiapLabNetworkPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FiapLabNetworkPolicies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: [
            "ec2:CreateVpc",
            "ec2:DescribeVpcs",
            "ec2:DescribeAddresses",
            "ec2:DescribeClassicLinkInstances",
            "ec2:DescribeCustomerGateways",
            "ec2:DescribeDhcpOptions",
            "ec2:DescribeEgressOnlyInternetGateways",
            "ec2:DescribeInternetGateways",
            "ec2:DescribeLocalGatewayRouteTables",
            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
            "ec2:DescribeNatGateways",
            "ec2:DescribeNetworkAcls",
            "ec2:DescribeNetworkInterfaceAttribute",
            "ec2:DescribeNetworkInterfacePermissions",
            "ec2:DescribeNetworkInterfaces",
            "ec2:DescribeRouteTables",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcAttribute",
            "ec2:DescribeVpcClassicLink",
            "ec2:DescribeVpcClassicLinkDnsSupport",
            "ec2:DescribeAvailabilityZones",
            "ec2:CreateRouteTable", 
            "ec2:CreateRoute", 
            "ec2:CreateInternetGateway", 
            "ec2:AttachInternetGateway", 
            "ec2:AssociateRouteTable", 
            "ec2:ModifyVpcAttribute",
            "ec2:DeleteRouteTable",
            "ec2:CreateRoute",
            "ec2:ReplaceRoute",
            "ec2:DeleteRoute"
            ]
          Resource: '*'
      Groups: [!Ref 'FiapLabGroup']
  
  FiapLabCNFPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FiapLabCNFPolicies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ["cloudformation:*"]
          Resource: '*'
      Groups: [!Ref 'FiapLabGroup']

  FiapLabEC2Policies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FiapLabEC2Policies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: [
            "ec2:RunInstances",
            "ec2:DescribeRegions",
            "ec2:TerminateInstances",
            "ec2:CreateTags",
            "ec2:DescribeInstances",
            "ec2:DescribeImages",
            "ec2:DescribeTags",
            "ec2:DescribeInstanceTypes",
            "ec2:DescribeKeyPairs",
            "ec2:CreateKeyPair",
            "ec2:DescribeVolumes",
            "ec2:CreateVolume",
            "ec2:AttachVolume",
            "ec2:DetachVolume",
            "ec2:DescribeAddresses",
            "ec2:AllocateAddress",
            "ec2:DescribeInstances",
            "ec2:AssociateAddress"
            ]
          Resource: '*'
      Groups: [!Ref 'FiapLabGroup']

  FiapLabBucketPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: FiapLabBucketPolicies
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: ["s3:*"]
          Resource: '*'
      Groups: [!Ref 'FiapLabGroup']
  
  FiapKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref 'FiapUser'

  C9IDE:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Name: !Sub '${User}-rm-${RM}-Cloud9-IDE'
      Description: !Sub '${User} Cloud9 IDE'
      AutomaticStopTimeMinutes: !Ref 'AutoHibernateTimeout'
      InstanceType: !Ref 'EC2InstanceType'

Outputs:

  Cloud9URL:
    Description: Cloud9 Environment
    Value:
      Fn::Join:
      - ''
      - - !Sub https://${AWS::Region}.console.aws.amazon.com/cloud9/ide/
        - !Ref 'C9IDE'

  AwsAccessKeyID:
    Value: !Ref 'FiapKeys'
    Description: AWSAccessKeyId of new user

  AwsSecretAccessKey:
    Value: !GetAtt [FiapKeys, SecretAccessKey]
    Description: AWSSecretAccessKey of new user