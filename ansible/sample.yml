# Provision Playbook

# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_ami_info_module.html
# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_net_info_module.html
# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_vpc_subnet_info_module.html
# https://docs.ansible.com/ansible/latest/collections/amazon/aws/ec2_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html
# https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html

- hosts: localhost
  connection: local
  gather_facts: False

  tasks:
    - name: Sample | Gather information about RHEL 7 AMIs published by Canonical (309956199498)
      amazon.aws.ec2_ami_info:
        owners: 309956199498
        filters:
          name: "RHEL-7.?*GA*"
      register: ec2_ami_info

    #- name: Sample | Gather information about Ubuntu 20.04 AMIs published by Canonical (099720109477)
    #  amazon.aws.ec2_ami_info:
    #    owners: 099720109477
    #    region: "{{ aws_region }}"
    #    filters:
    #      name: "ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
    #  register: ec2_ami_info

    - name: Sample | Select the latest AMI
      set_fact:
        ec2_ami_latest: >
          {{ ec2_ami_info.images | sort(attribute='creation_date') | last }} 

    - name: Sample | Gather information about VPC
      amazon.aws.ec2_vpc_net_info:
      register: ec2_vpc_net_info
      
    - name: Sample | Gather information about Subnet
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{ ec2_vpc_net_info.vpcs[0].vpc_id }}"
      register: ec2_vpc_subnet_info
      
    # Basic example with tagging and CloudWatch
    - name: Sample | Create one single instance
      amazon.aws.ec2:
        key_name: id_lab
        group: default
        instance_type: t2.medium
        image: "{{ ec2_ami_latest.image_id }}"
        wait: yes
        wait_timeout: 500
        count: 1
        instance_tags:
          env: staging
        monitoring: yes
        vpc_subnet_id: "{{ ec2_vpc_subnet_info.subnets[0].subnet_id }}"
        assign_public_ip: yes
      register: ec2_launch_result_info
  
    # How to debug facts and runtime information
    - name: Sample | Debug print out informations to terminal
      ansible.builtin.debug:
        msg:
          - "The provisioned instance internal ip address is: {{ ec2_launch_result_info.instances[0].private_ip }}"
          - "The provisioned instance private dns name is: {{ ec2_launch_result_info.instances[0].private_dns_name }}"